name: Build Docker Images

env:
  DOCKERHUB_TAG: "foorschtbar/pyd2b2"
  DOCKERHUB_SHORT_DESCRIPTION: "Python Docker Database Backup is a dockerized service to backup all of your database containers."
  DOCKERHUB_README_FILE: "README.md"

on:
  push:
  schedule:
    - cron: "0 5 * * 5"

defaults:
  run:
    shell: "bash -Eeuo pipefail -x {0}"

jobs:
  main:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set cache buster
        id: cache_buster
        run: |
          if [ '${{ github.event_name }}' == 'schedule' ]
          then
            echo "Scheduled run. Disable cache."
            echo "::set-output name=suffix::-no-cache"
          else
            echo "Non-scheduled run. Enable cache."
            echo "::set-output name=suffix::"
          fi

      - name: Get branche name
        uses: nelonoel/branch-name@v1.0.1

      - name: tag suffix
        id: tag_suffix
        run: |
          if [ ${BRANCH_NAME} == 'develop' ]
          then
            echo "::set-output name=suffix::develop"
          else
            echo "::set-output name=suffix::latest"
          fi
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKERHUB_TAG }}:${{ steps.tag_suffix.outputs.suffix }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref={{ env.DOCKERHUB_TAG }}:${{ steps.tag_suffix.outputs.suffix }}${{ steps.cache_buster.outputs.suffix }}
          cache-to: type=inline

      - name: Image digests
        run: |
          echo image digest: ${{ steps.docker_build.outputs.digest }}

  pushreadme:
    runs-on: ubuntu-latest
    name: Push README to Docker Hub
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: push README to Dockerhub
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_HUB_PASSWORD }}
        with:
          destination_container_repo: ${{ env.DOCKERHUB_TAG }}
          provider: dockerhub
          short_description: ${{ env.DOCKERHUB_SHORT_DESCRIPTION }}
          readme_file: ${{ env.DOCKERHUB_README_FILE }}
